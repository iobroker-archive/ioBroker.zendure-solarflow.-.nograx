{
  "version": 3,
  "sources": ["../../../src/models/deviceModels/Ace1500.ts"],
  "sourcesContent": ["import { aceControlStates } from \"../../constants/aceControlStates\";\r\nimport { aceStates } from \"../../constants/aceStates\";\r\nimport { ZendureSolarflow } from \"../../main\";\r\nimport { IZenHaDeviceDetails } from \"../IZenHaDeviceDetails\";\r\nimport { ZenHaDevice } from \"./ZenHaDevice\";\r\n\r\nexport class Ace1500 extends ZenHaDevice {\r\n  maxInputLimit = 900;\r\n  maxOutputLimit = 900;\r\n\r\n  states = aceStates;\r\n  controlStates = aceControlStates;\r\n\r\n  public constructor(\r\n    _adapter: ZendureSolarflow,\r\n    _productKey: string,\r\n    _deviceKey: string,\r\n    _productName: string,\r\n    _deviceName: string,\r\n    _zenHaDeviceDetails?: IZenHaDeviceDetails\r\n  ) {\r\n    super(\r\n      _adapter,\r\n      _productKey,\r\n      _deviceKey,\r\n      _productName,\r\n      _deviceName,\r\n      _zenHaDeviceDetails\r\n    );\r\n  }\r\n\r\n  public setDcSwitch(dcSwitch: boolean) {\r\n    if (this.adapter.mqttClient && this.productKey && this.deviceKey) {\r\n      const setDcSwitchContent = {\r\n        properties: { dcSwitch: dcSwitch ? 1 : 0 },\r\n      };\r\n      this.adapter.log.debug(\r\n        `[setDcSwitch] Set DC Switch for device ${this.deviceKey} to ${dcSwitch}!`\r\n      );\r\n      this.adapter.mqttClient?.publish(\r\n        this.iotTopic,\r\n        JSON.stringify(setDcSwitchContent)\r\n      );\r\n    }\r\n  }\r\n\r\n  public setAcSwitch(acSwitch: boolean) {\r\n    if (this.adapter.mqttClient && this.productKey && this.deviceKey) {\r\n      const setAcSwitchContent = {\r\n        properties: { acSwitch: acSwitch ? 1 : 0 },\r\n      };\r\n      this.adapter.log.debug(\r\n        `[setAcSwitch] Set AC Switch for device ${this.deviceKey} to ${acSwitch}!`\r\n      );\r\n      this.adapter.mqttClient?.publish(\r\n        this.iotTopic,\r\n        JSON.stringify(setAcSwitchContent)\r\n      );\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAiC;AACjC,uBAA0B;AAG1B,yBAA4B;AAErB,MAAM,gBAAgB,+BAAY;AAAA,EAOhC,YACL,UACA,aACA,YACA,cACA,aACA,qBACA;AACA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AArBF,yBAAgB;AAChB,0BAAiB;AAEjB,kBAAS;AACT,yBAAgB;AAAA,EAkBhB;AAAA,EAEO,YAAY,UAAmB;AA/BxC;AAgCI,QAAI,KAAK,QAAQ,cAAc,KAAK,cAAc,KAAK,WAAW;AAChE,YAAM,qBAAqB;AAAA,QACzB,YAAY,EAAE,UAAU,WAAW,IAAI,EAAE;AAAA,MAC3C;AACA,WAAK,QAAQ,IAAI;AAAA,QACf,0CAA0C,KAAK,SAAS,OAAO,QAAQ;AAAA,MACzE;AACA,iBAAK,QAAQ,eAAb,mBAAyB;AAAA,QACvB,KAAK;AAAA,QACL,KAAK,UAAU,kBAAkB;AAAA;AAAA,IAErC;AAAA,EACF;AAAA,EAEO,YAAY,UAAmB;AA9CxC;AA+CI,QAAI,KAAK,QAAQ,cAAc,KAAK,cAAc,KAAK,WAAW;AAChE,YAAM,qBAAqB;AAAA,QACzB,YAAY,EAAE,UAAU,WAAW,IAAI,EAAE;AAAA,MAC3C;AACA,WAAK,QAAQ,IAAI;AAAA,QACf,0CAA0C,KAAK,SAAS,OAAO,QAAQ;AAAA,MACzE;AACA,iBAAK,QAAQ,eAAb,mBAAyB;AAAA,QACvB,KAAK;AAAA,QACL,KAAK,UAAU,kBAAkB;AAAA;AAAA,IAErC;AAAA,EACF;AACF;",
  "names": []
}
