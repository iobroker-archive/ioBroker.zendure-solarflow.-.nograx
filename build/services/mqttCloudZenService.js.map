{
  "version": 3,
  "sources": ["../../src/services/mqttCloudZenService.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\n\r\nimport mqtt from \"mqtt\";\r\nimport { ZendureSolarflow } from \"../main\";\r\nimport {\r\n  adapter,\r\n  initAdapter,\r\n  onConnected,\r\n  onError,\r\n  onMessage,\r\n} from \"./mqttSharedService\";\r\nimport {\r\n  startCalculationJob,\r\n  startCheckStatesAndConnectionJob,\r\n  startResetValuesJob,\r\n} from \"./jobSchedule\";\r\n\r\nexport const connectCloudZenMqttClient = (\r\n  _adapter: ZendureSolarflow\r\n): boolean => {\r\n  if (!_adapter) {\r\n    return false;\r\n  }\r\n\r\n  initAdapter(_adapter);\r\n\r\n  if (!adapter || !adapter.mqttSettings) {\r\n    _adapter.log.error(`[connectCloudMqttClient] MQTT settings missing!`);\r\n    return false;\r\n  }\r\n\r\n  const options: mqtt.IClientOptions = {\r\n    clientId: adapter.mqttSettings.clientId,\r\n    username: adapter.mqttSettings.username,\r\n    password: adapter.mqttSettings.password,\r\n    clean: true,\r\n    protocolVersion: 5,\r\n  };\r\n\r\n  if (mqtt && adapter && adapter.mqttSettings) {\r\n    adapter.log.debug(\r\n      `[connectCloudMqttClient] Connecting to MQTT broker ${\r\n        adapter.mqttSettings.url + \":1883\"\r\n      }...`\r\n    );\r\n    adapter.mqttClient = mqtt.connect(\r\n      \"mqtt://\" + adapter.mqttSettings.url + \":1883\",\r\n      options\r\n    ); // create a client\r\n\r\n    if (adapter && adapter.mqttClient) {\r\n      adapter.mqttClient.on(\"connect\", onConnected);\r\n      adapter.mqttClient.on(\"error\", onError);\r\n\r\n      adapter.mqttClient.on(\"message\", onMessage);\r\n\r\n      // Job starten die states in der Nacht zu resetten\r\n      startResetValuesJob(adapter);\r\n\r\n      // Job starten die States zu checken\r\n      startCheckStatesAndConnectionJob(adapter);\r\n\r\n      // Calculation Job starten sofern aktiviert\r\n      if (adapter.config.useCalculation) {\r\n        startCalculationJob(adapter);\r\n      }\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,kBAAiB;AAEjB,+BAMO;AACP,yBAIO;AAEA,MAAM,4BAA4B,CACvC,aACY;AACZ,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,EACT;AAEA,4CAAY,QAAQ;AAEpB,MAAI,CAAC,oCAAW,CAAC,iCAAQ,cAAc;AACrC,aAAS,IAAI,MAAM,iDAAiD;AACpE,WAAO;AAAA,EACT;AAEA,QAAM,UAA+B;AAAA,IACnC,UAAU,iCAAQ,aAAa;AAAA,IAC/B,UAAU,iCAAQ,aAAa;AAAA,IAC/B,UAAU,iCAAQ,aAAa;AAAA,IAC/B,OAAO;AAAA,IACP,iBAAiB;AAAA,EACnB;AAEA,MAAI,YAAAA,WAAQ,oCAAW,iCAAQ,cAAc;AAC3C,qCAAQ,IAAI;AAAA,MACV,sDACE,iCAAQ,aAAa,MAAM,OAC7B;AAAA,IACF;AACA,qCAAQ,aAAa,YAAAA,QAAK;AAAA,MACxB,YAAY,iCAAQ,aAAa,MAAM;AAAA,MACvC;AAAA,IACF;AAEA,QAAI,oCAAW,iCAAQ,YAAY;AACjC,uCAAQ,WAAW,GAAG,WAAW,oCAAW;AAC5C,uCAAQ,WAAW,GAAG,SAAS,gCAAO;AAEtC,uCAAQ,WAAW,GAAG,WAAW,kCAAS;AAG1C,kDAAoB,gCAAO;AAG3B,+DAAiC,gCAAO;AAGxC,UAAI,iCAAQ,OAAO,gBAAgB;AACjC,oDAAoB,gCAAO;AAAA,MAC7B;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;",
  "names": ["mqtt"]
}
