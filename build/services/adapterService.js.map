{
  "version": 3,
  "sources": ["../../src/services/adapterService.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\nimport { ZendureSolarflow } from \"../main\";\r\nimport { setSocToZero } from \"./calculationService\";\r\nimport {\r\n  setDeviceAutomationInOutLimit,\r\n  setDischargeLimit,\r\n  setOutputLimit,\r\n} from \"./mqttService\";\r\n\r\nexport const updateSolarFlowState = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  state: string,\r\n  val: number | string | boolean\r\n): Promise<void> => {\r\n  await adapter?.setState(`${productKey}.${deviceKey}.${state}`, val, true);\r\n};\r\n\r\nexport const updateSolarFlowControlState = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  state: string,\r\n  val: number | string | boolean\r\n): Promise<void> => {\r\n  // First check if state exist\r\n  const stateExist = await adapter?.objectExists(\r\n    `${productKey}.${deviceKey}.control.${state}`\r\n  );\r\n\r\n  // Update the control state\r\n  if (stateExist) {\r\n    await adapter?.setState(\r\n      `${productKey}.${deviceKey}.control.${state}`,\r\n      val,\r\n      true\r\n    );\r\n  }\r\n};\r\n\r\nexport const checkVoltage = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  voltage: number\r\n): Promise<void> => {\r\n  if (voltage < 46.1) {\r\n    if (adapter.config.useCalculation) {\r\n      setSocToZero(adapter, productKey, deviceKey);\r\n    }\r\n\r\n    if (adapter.config.useLowVoltageBlock) {\r\n      // Activate Low Voltage Block\r\n      await adapter?.setState(\r\n        `${productKey}.${deviceKey}.control.lowVoltageBlock`,\r\n        true,\r\n        true\r\n      );\r\n\r\n      // Low Voltage Block activated, stop power input immediately\r\n      const autoModel = (\r\n        await adapter.getStateAsync(productKey + \".\" + deviceKey + \".autoModel\")\r\n      )?.val;\r\n      if (autoModel == 8) {\r\n        setDeviceAutomationInOutLimit(adapter, productKey, deviceKey, 0);\r\n      } else {\r\n        setOutputLimit(adapter, productKey, deviceKey, 0);\r\n      }\r\n\r\n      if (adapter.config.forceShutdownOnLowVoltage) {\r\n        const currentSoc = await adapter.getStateAsync(\r\n          `${productKey}.${deviceKey}.electricLevel`\r\n        );\r\n\r\n        if (currentSoc && Number(currentSoc.val) > 50) {\r\n          // We can't shut down the device. Full charge needed!\r\n          if (adapter.config.fullChargeIfNeeded) {\r\n            await adapter?.setState(\r\n              `${productKey}.${deviceKey}.control.fullChargeNeeded`,\r\n              true,\r\n              true\r\n            );\r\n          }\r\n        } else {\r\n          if (currentSoc && currentSoc.val) {\r\n            setDischargeLimit(\r\n              adapter,\r\n              productKey,\r\n              deviceKey,\r\n              Number(currentSoc.val)\r\n            );\r\n          }\r\n\r\n          // Check if device setting is correct\r\n          const hubState = await adapter.getStateAsync(\r\n            `${productKey}.${deviceKey}.hubState`\r\n          );\r\n\r\n          if (!hubState || Number(hubState.val) != 1) {\r\n            adapter.log.warn(\r\n              `[checkVoltage] hubState is not set to 'Stop output and shut down', device will NOT go offline!`\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else if (voltage >= 47.5) {\r\n    // Deactivate Low Voltage Block\r\n    const lowVoltageBlock = await adapter.getStateAsync(\r\n      `${productKey}.${deviceKey}.control.lowVoltageBlock`\r\n    );\r\n\r\n    if (lowVoltageBlock && lowVoltageBlock.val == true) {\r\n      await adapter?.setState(\r\n        `${productKey}.${deviceKey}.control.lowVoltageBlock`,\r\n        false,\r\n        true\r\n      );\r\n\r\n      if (\r\n        adapter.config.useLowVoltageBlock &&\r\n        adapter.config.forceShutdownOnLowVoltage\r\n      ) {\r\n        setDischargeLimit(\r\n          adapter,\r\n          productKey,\r\n          deviceKey,\r\n          adapter.config.dischargeLimit ? adapter.config.dischargeLimit : 5\r\n        );\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const checkDevicesServer = async (\r\n  adapter: ZendureSolarflow\r\n): Promise<void> => {\r\n  const channels = await adapter.getChannelsAsync();\r\n\r\n  channels.forEach(async (channel) => {\r\n    if (channel._id) {\r\n      const splitted = channel._id.split(\".\");\r\n      if (splitted.length == 4) {\r\n        const productKey = splitted[2];\r\n        const deviceKey = splitted[3];\r\n\r\n        const currentServerState = await adapter.getStateAsync(\r\n          `${productKey}.${deviceKey}.registeredServer`\r\n        );\r\n\r\n        if (\r\n          currentServerState &&\r\n          currentServerState.val &&\r\n          currentServerState.val != adapter.config.server\r\n        ) {\r\n          adapter.log.warn(\r\n            `Device with ProductKey '${productKey}' and DeviceKey '${deviceKey}' was configured on server '${currentServerState.val}', but adapter is configured to use server '${adapter.config.server}'! No data will be available!`\r\n          );\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
