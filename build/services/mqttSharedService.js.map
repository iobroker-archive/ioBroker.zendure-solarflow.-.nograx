{
  "version": 3,
  "sources": ["../../src/services/mqttSharedService.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\nimport { ZendureSolarflow } from \"../main\";\r\n\r\nimport { IPackData } from \"../models/IPackData\";\r\nimport {\r\n  IMqttData,\r\n  ISolarFlowMqttProperties,\r\n} from \"../models/ISolarFlowMqttProperties\";\r\nimport { ISolarflowState } from \"../models/ISolarflowState\";\r\n\r\nexport let adapter: ZendureSolarflow | undefined = undefined;\r\n\r\nexport const knownPackDataProperties = [\r\n  \"sn\",\r\n  \"totalVol\",\r\n  \"maxVol\",\r\n  \"minVol\",\r\n  \"socLevel\",\r\n  \"maxTemp\",\r\n  \"soh\",\r\n  \"power\",\r\n  \"batcur\",\r\n];\r\n\r\nexport const initAdapter = (_adapter: ZendureSolarflow): boolean => {\r\n  adapter = _adapter;\r\n\r\n  adapter.log.debug(\"[initAdapter] Init adapter in mqttSharedService!\");\r\n\r\n  return true;\r\n};\r\n\r\nexport const onMessage = async (\r\n  topic: string,\r\n  message: Buffer\r\n): Promise<void> => {\r\n  if (adapter) {\r\n    if (topic.toLowerCase().includes(\"loginOut/force\")) {\r\n      // TODO: Ausloggen???\r\n    }\r\n\r\n    const topicSplitted = topic.replace(\"/server/app\", \"\").split(\"/\");\r\n    const productKey = topicSplitted[1];\r\n    const deviceKey = topicSplitted[2];\r\n\r\n    let obj: IMqttData = {};\r\n    try {\r\n      obj = JSON.parse(message.toString());\r\n    } catch (e) {\r\n      const txt = message.toString();\r\n      adapter.log.error(`[onMessage] JSON Parse error!`);\r\n\r\n      adapter.log.debug(`[onMessage] JSON Parse error: ${txt}!`);\r\n    }\r\n\r\n    let isSolarFlow = false;\r\n\r\n    const _device = adapter?.zenHaDeviceList.find(\r\n      (x) => x.deviceKey == deviceKey\r\n    );\r\n\r\n    if (!_device) {\r\n      adapter.log.error(\r\n        `[onMessage] DeviceKey '${deviceKey} not found in device list!'}`\r\n      );\r\n    }\r\n\r\n    if (adapter.log.level == \"debug\") {\r\n      adapter.log.debug(\r\n        `[onMessage] MQTT message on topic '${topic}': ${message.toString()}`\r\n      );\r\n    }\r\n\r\n    /*     if (obj.timestamp) {\r\n      const currentTimeStamp = new Date().getTime() / 1000;\r\n      const diff = currentTimeStamp - obj.timestamp;\r\n\r\n      if (diff > 600) {\r\n        // Timestamp older than 5 Minutens, device is offline!\r\n        _device?.updateSolarFlowState(\"wifiState\", \"Disconnected\");\r\n      } else {\r\n        // Timestamp older than 5 Minutens, device is offline!\r\n        _device?.updateSolarFlowState(\"wifiState\", \"Connected\");\r\n      }\r\n    } */\r\n\r\n    // Check if device is an solarflow or hyper device. Don't use LowVoltageBlock on an ACE device?\r\n    if (productKey != \"8bM93H\") {\r\n      isSolarFlow = true;\r\n    }\r\n\r\n    //\r\n    if (obj.function == \"deviceAutomation\" && obj.success == 1) {\r\n      // setDeviceAutomationInOutLimit ack = true setzen;\r\n      const currentValue = await adapter.getStateAsync(\r\n        productKey + \".\" + deviceKey + \".control.setDeviceAutomationInOutLimit\"\r\n      );\r\n\r\n      _device?.updateSolarFlowControlState(\r\n        \"setDeviceAutomationInOutLimit\",\r\n        currentValue?.val ? currentValue.val : 0\r\n      );\r\n    } else if (obj.function == \"deviceAutomation\" && obj.success == 0) {\r\n      adapter?.log.warn(\r\n        `[onMessage] device automation failed for ${_device?.productName}: ${productKey}/${deviceKey}!`\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.autoModel != null &&\r\n      obj.properties?.autoModel != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"autoModel\", obj.properties.autoModel);\r\n\r\n      _device?.updateSolarFlowControlState(\r\n        \"autoModel\",\r\n        obj.properties.autoModel\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.heatState != null &&\r\n      obj.properties?.heatState != undefined\r\n    ) {\r\n      const value = obj.properties?.heatState == 0 ? false : true;\r\n\r\n      _device?.updateSolarFlowState(\"heatState\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.electricLevel != null &&\r\n      obj.properties?.electricLevel != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"electricLevel\",\r\n        obj.properties.electricLevel\r\n      );\r\n\r\n      if (\r\n        adapter?.config.useCalculation &&\r\n        obj.properties.electricLevel == 100 &&\r\n        isSolarFlow\r\n      ) {\r\n        _device?.setEnergyWhMax();\r\n      }\r\n\r\n      if (obj.properties.electricLevel == 100) {\r\n        const fullChargeNeeded = await adapter.getStateAsync(\r\n          productKey + \".\" + deviceKey + \".control.fullChargeNeeded\"\r\n        );\r\n\r\n        if (\r\n          fullChargeNeeded &&\r\n          fullChargeNeeded.val &&\r\n          fullChargeNeeded.val == true\r\n        ) {\r\n          await adapter?.setState(\r\n            `${productKey}.${deviceKey}.control.fullChargeNeeded`,\r\n            false,\r\n            true\r\n          );\r\n        }\r\n      }\r\n\r\n      // if minSoc is reached, set the calculated soc to 0\r\n      const minSoc = await adapter?.getStateAsync(\r\n        `${productKey}.${deviceKey}.minSoc`\r\n      );\r\n      if (\r\n        adapter?.config.useCalculation &&\r\n        minSoc &&\r\n        minSoc.val &&\r\n        obj.properties.electricLevel == Number(minSoc.val) &&\r\n        isSolarFlow\r\n      ) {\r\n        _device?.setSocToZero();\r\n      }\r\n    }\r\n\r\n    if (obj.power != null && obj.power != undefined) {\r\n      const value = obj.power / 10;\r\n      _device?.updateSolarFlowState(\"power\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.packState != null &&\r\n      obj.properties?.packState != undefined\r\n    ) {\r\n      const value =\r\n        obj.properties?.packState == 0\r\n          ? \"Idle\"\r\n          : obj.properties?.packState == 1\r\n            ? \"Charging\"\r\n            : obj.properties?.packState == 2\r\n              ? \"Discharging\"\r\n              : \"Unknown\";\r\n      _device?.updateSolarFlowState(\"packState\", value);\r\n\r\n      if (obj.properties?.packState) {\r\n        // Update combined data point\r\n        _device?.updateSolarFlowState(\"packPower\", 0);\r\n      }\r\n    }\r\n\r\n    if (\r\n      obj.properties?.passMode != null &&\r\n      obj.properties?.passMode != undefined\r\n    ) {\r\n      const value =\r\n        obj.properties?.passMode == 0\r\n          ? \"Automatic\"\r\n          : obj.properties?.passMode == 1\r\n            ? \"Always off\"\r\n            : obj.properties?.passMode == 2\r\n              ? \"Always on\"\r\n              : \"Unknown\";\r\n      _device?.updateSolarFlowState(\"passMode\", value);\r\n\r\n      _device?.updateSolarFlowControlState(\r\n        \"passMode\",\r\n        obj.properties?.passMode\r\n      );\r\n    }\r\n\r\n    if (obj.properties?.pass != null && obj.properties?.pass != undefined) {\r\n      const value = obj.properties?.pass == 0 ? false : true;\r\n\r\n      _device?.updateSolarFlowState(\"pass\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.autoRecover != null &&\r\n      obj.properties?.autoRecover != undefined\r\n    ) {\r\n      const value = obj.properties?.autoRecover == 0 ? false : true;\r\n\r\n      _device?.updateSolarFlowState(\"autoRecover\", value);\r\n\r\n      _device?.updateSolarFlowControlState(\"autoRecover\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.outputHomePower != null &&\r\n      obj.properties?.outputHomePower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"outputHomePower\",\r\n        obj.properties.outputHomePower\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.energyPower != null &&\r\n      obj.properties?.energyPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"energyPower\", obj.properties.energyPower);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.outputLimit != null &&\r\n      obj.properties?.outputLimit != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"outputLimit\", obj.properties.outputLimit);\r\n\r\n      _device?.updateSolarFlowControlState(\r\n        \"setOutputLimit\",\r\n        obj.properties.outputLimit\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.smartMode != null &&\r\n      obj.properties?.smartMode != undefined\r\n    ) {\r\n      const value = obj.properties?.smartMode == 0 ? false : true;\r\n\r\n      _device?.updateSolarFlowState(\"smartMode\", value);\r\n\r\n      _device?.updateSolarFlowControlState(\"smartMode\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.buzzerSwitch != null &&\r\n      obj.properties?.buzzerSwitch != undefined\r\n    ) {\r\n      const value = obj.properties?.buzzerSwitch == 0 ? false : true;\r\n\r\n      _device?.updateSolarFlowState(\"buzzerSwitch\", value);\r\n\r\n      _device?.updateSolarFlowControlState(\"buzzerSwitch\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.outputPackPower != null &&\r\n      obj.properties?.outputPackPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"outputPackPower\",\r\n        obj.properties.outputPackPower\r\n      );\r\n\r\n      if (obj.properties?.outputPackPower > 0) {\r\n        // Update combined data point\r\n        _device?.updateSolarFlowState(\r\n          \"packPower\",\r\n          obj.properties.outputPackPower\r\n        );\r\n      } else if (obj.properties?.outputPackPower == 0) {\r\n        // Check if packInputPower is 0\r\n        const packInputPower = await adapter?.getStateAsync(\r\n          productKey + \".\" + deviceKey + \".packInputPower\"\r\n        );\r\n\r\n        if (packInputPower?.val == 0) {\r\n          // Update combined data point to 0 as both are 0\r\n          _device?.updateSolarFlowState(\r\n            \"packPower\",\r\n            -Math.abs(obj.properties.outputPackPower)\r\n          );\r\n        }\r\n      }\r\n\r\n      // if outPutPackPower set packInputPower to 0\r\n      _device?.updateSolarFlowState(\"packInputPower\", 0);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.packInputPower != null &&\r\n      obj.properties?.packInputPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"packInputPower\",\r\n        obj.properties.packInputPower\r\n      );\r\n\r\n      if (obj.properties?.packInputPower > 0) {\r\n        // Update combined data point\r\n        _device?.updateSolarFlowState(\r\n          \"packPower\",\r\n          -Math.abs(obj.properties.packInputPower)\r\n        );\r\n      } else if (obj.properties?.packInputPower == 0) {\r\n        // Check if outputPackPower is 0\r\n        const outputPackPower = await adapter?.getStateAsync(\r\n          productKey + \".\" + deviceKey + \".outputPackPower\"\r\n        );\r\n\r\n        if (outputPackPower?.val == 0) {\r\n          // Update combined data point to 0 as both are 0\r\n          _device?.updateSolarFlowState(\r\n            \"packPower\",\r\n            -Math.abs(obj.properties.packInputPower)\r\n          );\r\n        }\r\n      }\r\n\r\n      // if packInputPower set outputPackPower to 0\r\n      _device?.updateSolarFlowState(\"outputPackPower\", 0);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.solarInputPower != null &&\r\n      obj.properties?.solarInputPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"solarInputPower\",\r\n        obj.properties.solarInputPower\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.pvPower1 != null &&\r\n      obj.properties?.pvPower1 != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"pvPower2\", // Reversed to adjust like offical app\r\n        obj.properties.pvPower1\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.pvPower2 != null &&\r\n      obj.properties?.pvPower2 != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"pvPower1\", // Reversed to adjust like offical app\r\n        obj.properties.pvPower2\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.solarPower1 != null &&\r\n      obj.properties?.solarPower1 != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"pvPower1\", obj.properties.solarPower1);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.solarPower2 != null &&\r\n      obj.properties?.solarPower2 != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"pvPower2\", obj.properties.solarPower2);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.solarPower3 != null &&\r\n      obj.properties?.solarPower3 != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"pvPower3\", obj.properties.solarPower3);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.solarPower4 != null &&\r\n      obj.properties?.solarPower4 != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"pvPower4\", obj.properties.solarPower4);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.remainOutTime != null &&\r\n      obj.properties?.remainOutTime != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"remainOutTime\",\r\n        obj.properties.remainOutTime\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.remainInputTime != null &&\r\n      obj.properties?.remainInputTime != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"remainInputTime\",\r\n        obj.properties.remainInputTime\r\n      );\r\n    }\r\n\r\n    if (obj.properties?.socSet != null && obj.properties?.socSet != undefined) {\r\n      _device?.updateSolarFlowState(\r\n        \"socSet\",\r\n        Number(obj.properties.socSet) / 10\r\n      );\r\n\r\n      _device?.updateSolarFlowControlState(\r\n        \"chargeLimit\",\r\n        Number(obj.properties.socSet) / 10\r\n      );\r\n    }\r\n\r\n    if (obj.properties?.minSoc != null && obj.properties?.minSoc != undefined) {\r\n      _device?.updateSolarFlowState(\r\n        \"minSoc\",\r\n        Number(obj.properties.minSoc) / 10\r\n      );\r\n\r\n      _device?.updateSolarFlowControlState(\r\n        \"dischargeLimit\",\r\n        Number(obj.properties.minSoc) / 10\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.inputLimit != null &&\r\n      obj.properties?.inputLimit != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"inputLimit\", obj.properties.inputLimit);\r\n\r\n      _device?.updateSolarFlowControlState(\r\n        \"setInputLimit\",\r\n        obj.properties.inputLimit\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.gridInputPower != null &&\r\n      obj.properties?.gridInputPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"gridInputPower\",\r\n        obj.properties.gridInputPower\r\n      );\r\n    }\r\n\r\n    if (obj.properties?.acMode != null && obj.properties?.acMode != undefined) {\r\n      _device?.updateSolarFlowState(\"acMode\", obj.properties.acMode);\r\n\r\n      _device?.updateSolarFlowControlState(\"acMode\", obj.properties.acMode);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.hyperTmp != null &&\r\n      obj.properties?.hyperTmp != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"hyperTmp\",\r\n        obj.properties.hyperTmp / 10 - 273.15\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.acOutputPower != null &&\r\n      obj.properties?.acOutputPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"acOutputPower\",\r\n        obj.properties.acOutputPower\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.gridPower != null &&\r\n      obj.properties?.gridPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"gridInputPower\", obj.properties.gridPower);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.acSwitch != null &&\r\n      obj.properties?.acSwitch != undefined\r\n    ) {\r\n      const value = obj.properties?.acSwitch == 0 ? false : true;\r\n\r\n      _device?.updateSolarFlowState(\"acSwitch\", value);\r\n\r\n      _device?.updateSolarFlowControlState(\"acSwitch\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.dcSwitch != null &&\r\n      obj.properties?.dcSwitch != undefined\r\n    ) {\r\n      const value = obj.properties?.dcSwitch == 0 ? false : true;\r\n\r\n      _device?.updateSolarFlowState(\"dcSwitch\", value);\r\n\r\n      _device?.updateSolarFlowControlState(\"dcSwitch\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.dcOutputPower != null &&\r\n      obj.properties?.dcOutputPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"dcOutputPower\",\r\n        obj.properties.dcOutputPower\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.pvBrand != null &&\r\n      obj.properties?.pvBrand != undefined\r\n    ) {\r\n      const value =\r\n        obj.properties?.pvBrand == 0\r\n          ? \"Others\"\r\n          : obj.properties?.pvBrand == 1\r\n            ? \"Hoymiles\"\r\n            : obj.properties?.pvBrand == 2\r\n              ? \"Enphase\"\r\n              : obj.properties?.pvBrand == 3\r\n                ? \"APSystems\"\r\n                : obj.properties?.pvBrand == 4\r\n                  ? \"Anker\"\r\n                  : obj.properties?.pvBrand == 5\r\n                    ? \"Deye\"\r\n                    : obj.properties?.pvBrand == 6\r\n                      ? \"Bosswerk\"\r\n                      : \"Unknown\";\r\n      _device?.updateSolarFlowState(\"pvBrand\", value);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.inverseMaxPower != null &&\r\n      obj.properties?.inverseMaxPower != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"inverseMaxPower\",\r\n        obj.properties.inverseMaxPower\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.wifiState != null &&\r\n      obj.properties?.wifiState != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\r\n        \"wifiState\",\r\n        obj.properties.wifiState == 1 ? \"Connected\" : \"Disconnected\"\r\n      );\r\n    }\r\n\r\n    if (\r\n      obj.properties?.packNum != null &&\r\n      obj.properties?.packNum != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"packNum\", obj.properties.packNum);\r\n    }\r\n\r\n    if (\r\n      obj.properties?.hubState != null &&\r\n      obj.properties?.hubState != undefined\r\n    ) {\r\n      _device?.updateSolarFlowState(\"hubState\", obj.properties.hubState);\r\n\r\n      _device?.updateSolarFlowControlState(\"hubState\", obj.properties.hubState);\r\n    }\r\n\r\n    if (obj.packData) {\r\n      _device?.addOrUpdatePackData(obj.packData, isSolarFlow);\r\n    }\r\n\r\n    if (obj.properties && adapter.log.level == \"debug\") {\r\n      let found = false;\r\n\r\n      Object.entries(obj.properties).forEach(([key, value]) => {\r\n        _device?.states.forEach((state: ISolarflowState) => {\r\n          if (state.title == key) {\r\n            found = true;\r\n          }\r\n        });\r\n\r\n        if (found) {\r\n          //console.log(\r\n          //  `${productName?.val}: ${key} with value ${value} is a KNOWN Mqtt Prop!`\r\n          //);\r\n        } else {\r\n          adapter?.log.debug(\r\n            `[onMessage] ${_device?.deviceKey}: ${key} with value ${JSON.stringify(value)} is a UNKNOWN Mqtt Property!`\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const onConnected = (): void => {\r\n  if (adapter) {\r\n    adapter.lastLogin = new Date();\r\n    adapter.setState(\"info.connection\", true, true);\r\n    adapter.log.info(\"[onConnected] Connected with MQTT!\");\r\n  }\r\n};\r\n\r\nexport const onError = (error: any): void => {\r\n  if (adapter) {\r\n    adapter.setState(\"info.connection\", false, true);\r\n    adapter.log.error(\"Connection to MQTT failed! Error: \" + error);\r\n  }\r\n};\r\n\r\nexport const onSubscribeReportTopic: any = (error: Error | null) => {\r\n  if (error) {\r\n    adapter?.log.error(\"Subscription to MQTT failed! Error: \" + error);\r\n  } else {\r\n    adapter?.log.debug(\"Subscription of Report Topic successful!\");\r\n  }\r\n};\r\n\r\nexport const onSubscribeIotTopic: any = (\r\n  error: Error | null,\r\n  productKey: string,\r\n  deviceKey: string\r\n) => {\r\n  if (error) {\r\n    adapter?.log.error(\"Subscription to MQTT failed! Error: \" + error);\r\n  } else if (adapter) {\r\n    adapter?.log.debug(\"Subscription of IOT Topic successful!\");\r\n\r\n    const _device = adapter.zenHaDeviceList.find(\r\n      (x) => x.productKey == productKey && x.deviceKey == deviceKey\r\n    );\r\n\r\n    if (_device) {\r\n      _device.triggerFullTelemetryUpdate();\r\n    }\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
