{
  "version": 3,
  "sources": ["../../src/helpers/helpers.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\n\r\nexport const getProductNameFromProductKey = (productKey: string): string => {\r\n  switch (productKey.toLowerCase()) {\r\n    case \"73bktv\":\r\n      return \"solarflow2.0\";\r\n    case \"a8yh63\":\r\n      return \"solarflow hub 2000\";\r\n    case \"ywf7hv\":\r\n      return \"solarflow aio zy\";\r\n    case \"ja72u0ha\":\r\n      return \"hyper 2000\";\r\n    case \"gda3tb\":\r\n      return \"hyper 2000\";\r\n    case \"8bm93h\":\r\n      return \"ace 1500\";\r\n    case \"bc8b7f\":\r\n      return \"solarflow 2400 ac\";\r\n    case \"b1nhmc\":\r\n      return \"solarflow 800\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport const getMinAndMaxOutputLimitForProductKey = (\r\n  productKey: string,\r\n  limit: number\r\n): number => {\r\n  const productName = getProductNameFromProductKey(productKey);\r\n\r\n  if (limit < 100 && limit != 90 && limit != 60 && limit != 30 && limit != 0) {\r\n    // NUR Solarflow HUB: Das Limit kann unter 100 nur in 30er Schritten gesetzt werden, dH. 30/60/90/100, wir rechnen das also um\r\n    if (\r\n      limit < 100 &&\r\n      limit > 90 &&\r\n      !productName?.includes(\"hyper\") &&\r\n      !productName?.includes(\"2400 ac\") &&\r\n      !productName?.includes(\"solarflow 800\")\r\n    ) {\r\n      limit = 90;\r\n    } else if (\r\n      limit > 60 &&\r\n      limit < 90 &&\r\n      !productName?.includes(\"hyper\") &&\r\n      !productName?.includes(\"2400 ac\") &&\r\n      !productName?.includes(\"solarflow 800\")\r\n    ) {\r\n      limit = 60;\r\n    } else if (\r\n      limit > 30 &&\r\n      limit < 60 &&\r\n      !productName?.includes(\"hyper\") &&\r\n      !productName?.includes(\"2400 ac\") &&\r\n      !productName?.includes(\"solarflow 800\")\r\n    ) {\r\n      limit = 30;\r\n    } else if (limit < 30) {\r\n      limit = 30;\r\n    }\r\n  }\r\n\r\n  switch (productName?.toLocaleLowerCase()) {\r\n    case \"hyper 2000\":\r\n      if (limit > 1200) {\r\n        limit = 1200;\r\n      }\r\n      break;\r\n    case \"solarflow 800\":\r\n      if (limit > 800) {\r\n        limit = 800;\r\n      }\r\n      break;\r\n    case \"solarflow2.0\":\r\n      if (limit > 1200) {\r\n        limit = 1200;\r\n      }\r\n      break;\r\n    case \"solarflow hub 2000\":\r\n      if (limit > 1200) {\r\n        limit = 1200;\r\n      }\r\n      break;\r\n    case \"solarflow aio zy\":\r\n      if (limit > 1200) {\r\n        limit = 1200;\r\n      }\r\n      break;\r\n    case \"solarflow 800 pro\":\r\n      if (limit > 800) {\r\n        limit = 800;\r\n      }\r\n      break;\r\n    case \"solarflow 2400 ac\":\r\n      if (limit > 2400) {\r\n        limit = 2400;\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return limit;\r\n};\r\n\r\nexport const getMinAndMaxInputLimitForProductKey = (\r\n  productKey: string,\r\n  limit: number\r\n): number => {\r\n  let maxLimit = 900;\r\n\r\n  const productName = getProductNameFromProductKey(productKey);\r\n\r\n  if (productName?.includes(\"hyper\")) {\r\n    maxLimit = 1200;\r\n  }\r\n\r\n  if (productName?.includes(\"2400 ac\")) {\r\n    maxLimit = 2400;\r\n  }\r\n\r\n  if (productName?.includes(\"solarflow 800\")) {\r\n    maxLimit = 800;\r\n  }\r\n\r\n  if (productName?.includes(\"ace\")) {\r\n    // Das Limit kann nur in 100er Schritten gesetzt werden\r\n    limit = Math.ceil(limit / 100) * 100;\r\n  }\r\n\r\n  if (limit < 0) {\r\n    limit = 0;\r\n  } else if (limit > 0 && limit <= 30) {\r\n    limit = 30;\r\n  } else if (limit > maxLimit) {\r\n    limit = maxLimit;\r\n  }\r\n\r\n  return limit;\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,+BAA+B,CAAC,eAA+B;AAC1E,UAAQ,WAAW,YAAY,GAAG;AAAA,IAChC,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AAEO,MAAM,uCAAuC,CAClD,YACA,UACW;AACX,QAAM,cAAc,6BAA6B,UAAU;AAE3D,MAAI,QAAQ,OAAO,SAAS,MAAM,SAAS,MAAM,SAAS,MAAM,SAAS,GAAG;AAE1E,QACE,QAAQ,OACR,QAAQ,MACR,EAAC,2CAAa,SAAS,aACvB,EAAC,2CAAa,SAAS,eACvB,EAAC,2CAAa,SAAS,mBACvB;AACA,cAAQ;AAAA,IACV,WACE,QAAQ,MACR,QAAQ,MACR,EAAC,2CAAa,SAAS,aACvB,EAAC,2CAAa,SAAS,eACvB,EAAC,2CAAa,SAAS,mBACvB;AACA,cAAQ;AAAA,IACV,WACE,QAAQ,MACR,QAAQ,MACR,EAAC,2CAAa,SAAS,aACvB,EAAC,2CAAa,SAAS,eACvB,EAAC,2CAAa,SAAS,mBACvB;AACA,cAAQ;AAAA,IACV,WAAW,QAAQ,IAAI;AACrB,cAAQ;AAAA,IACV;AAAA,EACF;AAEA,UAAQ,2CAAa,qBAAqB;AAAA,IACxC,KAAK;AACH,UAAI,QAAQ,MAAM;AAChB,gBAAQ;AAAA,MACV;AACA;AAAA,IACF,KAAK;AACH,UAAI,QAAQ,KAAK;AACf,gBAAQ;AAAA,MACV;AACA;AAAA,IACF,KAAK;AACH,UAAI,QAAQ,MAAM;AAChB,gBAAQ;AAAA,MACV;AACA;AAAA,IACF,KAAK;AACH,UAAI,QAAQ,MAAM;AAChB,gBAAQ;AAAA,MACV;AACA;AAAA,IACF,KAAK;AACH,UAAI,QAAQ,MAAM;AAChB,gBAAQ;AAAA,MACV;AACA;AAAA,IACF,KAAK;AACH,UAAI,QAAQ,KAAK;AACf,gBAAQ;AAAA,MACV;AACA;AAAA,IACF,KAAK;AACH,UAAI,QAAQ,MAAM;AAChB,gBAAQ;AAAA,MACV;AACA;AAAA,IACF;AACE;AAAA,EACJ;AAEA,SAAO;AACT;AAEO,MAAM,sCAAsC,CACjD,YACA,UACW;AACX,MAAI,WAAW;AAEf,QAAM,cAAc,6BAA6B,UAAU;AAE3D,MAAI,2CAAa,SAAS,UAAU;AAClC,eAAW;AAAA,EACb;AAEA,MAAI,2CAAa,SAAS,YAAY;AACpC,eAAW;AAAA,EACb;AAEA,MAAI,2CAAa,SAAS,kBAAkB;AAC1C,eAAW;AAAA,EACb;AAEA,MAAI,2CAAa,SAAS,QAAQ;AAEhC,YAAQ,KAAK,KAAK,QAAQ,GAAG,IAAI;AAAA,EACnC;AAEA,MAAI,QAAQ,GAAG;AACb,YAAQ;AAAA,EACV,WAAW,QAAQ,KAAK,SAAS,IAAI;AACnC,YAAQ;AAAA,EACV,WAAW,QAAQ,UAAU;AAC3B,YAAQ;AAAA,EACV;AAEA,SAAO;AACT;",
  "names": []
}
