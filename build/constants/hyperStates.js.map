{
  "version": 3,
  "sources": ["../../src/constants/hyperStates.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\nimport { ISolarflowState } from \"../models/ISolarflowState\";\r\nimport { sharedStates } from \"./sharedStates\";\r\n\r\nexport const hyperStates: ISolarflowState[] = sharedStates.concat([\r\n  {\r\n    title: \"hyperTmp\",\r\n    nameDe: \"Temperatur des Hyper 2000\",\r\n    nameEn: \"Temperature of Hyper 2000\",\r\n    type: \"number\",\r\n    role: \"value.temperature\",\r\n    unit: \"\u00B0C\",\r\n  },\r\n  // TODO: Check if passmode is a state of Hyper\r\n  {\r\n    title: \"passMode\",\r\n    nameDe: \"Einstellung des Bypass Modus\",\r\n    nameEn: \"Setting of bypass mode\",\r\n    type: \"string\",\r\n    role: \"value\",\r\n  },\r\n  {\r\n    title: \"pvBrand\",\r\n    nameDe: \"Wechselrichter Hersteller\",\r\n    nameEn: \"brand of inverter\",\r\n    type: \"string\",\r\n    role: \"value\",\r\n  },\r\n  {\r\n    title: \"outputHomePower\",\r\n    nameDe: \"Ausgangsleistung\",\r\n    nameEn: \"output power\",\r\n    type: \"number\",\r\n    role: \"value.power\",\r\n    unit: \"W\",\r\n  },\r\n  {\r\n    title: \"outputLimit\",\r\n    nameDe: \"Limit der Ausgangsleistung\",\r\n    nameEn: \"limit of output power\",\r\n    type: \"number\",\r\n    role: \"value.power\",\r\n    unit: \"W\",\r\n  },\r\n  {\r\n    title: \"acMode\",\r\n    nameDe: \"AC Modus\",\r\n    nameEn: \"AC mode\",\r\n    type: \"number\",\r\n    role: \"value\",\r\n    states: {\r\n      0: \"Nothing\",\r\n      1: \"AC input mode\",\r\n      2: \"AC output mode\",\r\n    },\r\n  },\r\n  {\r\n    title: \"batteryElectric\",\r\n    nameDe: \"Batterie Leistung\",\r\n    nameEn: \"Battery electric\",\r\n    type: \"number\",\r\n    role: \"value.power\",\r\n    unit: \"W\",\r\n  },\r\n  {\r\n    title: \"gridInputPower\",\r\n    nameDe: \"Aktuelle AC Eingangsleistung\",\r\n    nameEn: \"Current AC input power\",\r\n    type: \"number\",\r\n    role: \"value.power\",\r\n    unit: \"W\",\r\n  },\r\n  {\r\n    title: \"acOutputPower\",\r\n    nameDe: \"Aktuelle AC Ausgangsleistung\",\r\n    nameEn: \"Current AC output power\",\r\n    type: \"number\",\r\n    role: \"value.power\",\r\n    unit: \"W\",\r\n  },\r\n  {\r\n    title: \"inverseMaxPower\",\r\n    nameDe: \"Maximal akzeptabler Eingang des PV-Mikrowechselrichters\",\r\n    nameEn: \"highest acceptable input power\",\r\n    type: \"number\",\r\n    role: \"value.power\",\r\n    unit: \"W\",\r\n  },\r\n  {\r\n    title: \"pass\",\r\n    nameDe: \"Bypass an/aus\",\r\n    nameEn: \"Bypass on/off\",\r\n    type: \"boolean\",\r\n    role: \"value\",\r\n  },\r\n]);\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,0BAA6B;AAEtB,MAAM,cAAiC,iCAAa,OAAO;AAAA,EAChE;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA;AAAA,EAEA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AACF,CAAC;",
  "names": []
}
