{
  "settings": "Adapter settings for Zendure Solarflow",
  "settingsDesc": "Please provide the login information for the Zendure Cloud (the same you entered in the official app).",
  "server": "Server",
  "userName": "E-Mail",
  "password": "Password",
  "useCalculation": "Use calculations (daily values, soc)",
  "useLowVoltageBlock": "Use low voltage block (deactivates power output when voltage of one battery drops below critical voltage)",
  "forceShutdownOnLowVoltage": "Force Solarflow device to shut down by setting the min. SOC as soon as the voltage falls below the limit",
  "fullChargeIfNeeded": "Charge to 100% if Zendure SOC is greater than 50% when critical voltage is reached.",
  "dischargeLimit": "Discharge Limit",
  "sn": "Serial number",
  "eu": "EU (Zendure App Cloud)",
  "global": "Global (Zendure App Cloud)",
  "local": "Local Mqtt Server",
  "setOutputLimit": "Set the output limit",
  "socSet": "Defined SOC limit",
  "remainOutTime": "Remaining output time",
  "remainInputTime": "Remaining charge time",
  "solarInputPower": "Current Solar power (W)",
  "packInputPower": "Current power to battery (W)",
  "outputPackPower": "Current power from battery (W)",
  "outputLimit": "Max. allowed power to inverter (W)",
  "outputHomePower": "Current power to inverter",
  "masterSwitch": "Device status (on / off)",
  "buzzerSwitch": "Sound output on HUB",
  "electricLevel": "Current soc",
  "donate1": "If you find the adapter useful for you and want to support my work, feel free to donate by Paypal. Thank You!",
  "donate2": "(this is an personal Donate link for Nograx, in no relation to the ioBroker Project!)",
  "donateHeader": "Donate",
  "enterPassword": "Please provide an password!",
  "useFallbackService": "Use Fallback server (Connect to developer MQTT server - read only!)",
  "snNumber": "Serial ID of Solarflow device",
  "enterSnNumber": "Please enter a valid serial id!",
  "HUB 1200": "HUB 1200",
  "HUB 2000": "HUB 2000",
  "Hyper 2000": "Hyper 2000",
  "Ace 1500": "Ace 1500",
  "AIO 2400": "AIO 2400",
  "localMqttUrl": "Local MQTT Server URL/IP",
  "useRestart": "Use restart of adapter every 3 hours to refresh access token",
  "connectionMode": "Connection mode",
  "authKey": "Authorization Cloud Key",
  "usrPwd": "Username & password"
}
